include:
  - chals/web/password-is-taken/docker-compose.yml

services:
  # PWN - 5000
  pwntools:
    build: ./chals/pwn/pwntools
    ports:
      - "5000:1337"
    restart: always

  guided-pwn:
    build: ./chals/pwn/pwnymart
    ports:
      - "5001:1337"
    restart: always

  ffi-to-win:
    build: ./chals/pwn/ffi-to-win
    ports:
      - "5080:1337"
    restart: always

  bug-bounty-1:
    build: ./chals/pwn/bug-bounty-1
    ports:
      - "5002:1337"
    restart: always

  bug-bounty-2:
    build: ./chals/pwn/bug-bounty-2
    ports:
      - "5003:1337"
    restart: always

  bug-bounty-3:
    build: ./chals/pwn/bug-bounty-3
    ports:
      - "5004:1337"
    restart: always

  bug-bounty-4:
    build: ./chals/pwn/bug-bounty-4
    ports:
      - "5005:1337"
    restart: always

  bug-bounty-5:
    build: ./chals/pwn/bug-bounty-5
    ports:
      - "5006:1337"
    restart: always

  # REV - 7000
  rate-limit:
    build: ./chals/rev/rate-limit
    ports:
      - "7000:1337"
    restart: always

  # MISC - 8000
  perplexing-pyjail:
    build: ./chals/misc/perplexing-pyjail
    ports:
      - "8000:1337"
    restart: always

  ssrf-as-a-service:
    build: ./chals/web/ssrf-as-a-service
    restart: always
    ports:
      - "1337"
    labels:
      - "traefik.enable=true" # enable Traefik
      - "traefik.http.routers.ssrf-as-a-service.rule=Host(`ssrf-as-a-service.chal.fallctf.com`)" # ssrf-as-a-service.chal.fallctf.com
      - "traefik.http.services.ssrf-as-a-service.loadbalancer.server.port=1337" # connect to port 1337 of this service
      - "traefik.http.routers.ssrf-as-a-service.entrypoints=websecure"
      - "traefik.http.routers.ssrf-as-a-service.tls.certresolver=myresolver"

  enron-feedback:
    build: ./chals/web/enron-feedback
    restart: always
    ports:
      - "1337"
    labels:
      - "traefik.enable=true" # enable Traefik
      - "traefik.http.routers.enron-feedback.rule=Host(`enron-feedback.chal.fallctf.com`)" # enron-feedback.chal.fallctf.com
      - "traefik.http.services.enron-feedback.loadbalancer.server.port=1337" # connect to port 1337 of this service
      - "traefik.http.routers.enron-feedback.entrypoints=websecure"
      - "traefik.http.routers.enron-feedback.tls.certresolver=myresolver"

  reverse-proxy:
    image: traefik:v3.1

    command:
      #- "--log.level=DEBUG"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=webmaster@sigpwny.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

    ports:
      - "443:443" # HTTPS port
      # - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      # - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  # CRYPTO - 6000
  flip_out:
    build: ./chals/crypto/flip_out
    ports:
      - "6000:1337"
    restart: always

  internets-checkpoint:
    build: ./chals/web/internets-checkpoint-1
    restart: always
    ports:
      - "80"
    labels:
      - "traefik.enable=true" # enable Traefik
      - "traefik.http.routers.internets-checkpoint.rule=Host(`internets-checkpoint.chal.fallctf.com`)"
      - "traefik.http.services.internets-checkpoint.loadbalancer.server.port=80"
      - "traefik.http.routers.internets-checkpoint.entrypoints=websecure"
      - "traefik.http.routers.internets-checkpoint.tls.certresolver=myresolver"

  path-to-success:
    build: ./chals/web/path-to-success/challenge
    restart: always
    ports:
      - "1337"
    labels:
      - "traefik.enable=true" # enable Traefik
      - "traefik.http.routers.path-to-success.rule=Host(`path-to-success.chal.fallctf.com`)" # path-to-success.chal.fallctf.com
      - "traefik.http.services.path-to-success.loadbalancer.server.port=1337" # connect to port 1337 of this service
      - "traefik.http.routers.path-to-success.entrypoints=websecure"
      - "traefik.http.routers.path-to-success.tls.certresolver=myresolver"

  path-to-success-again:
    build: ./chals/web/path-to-success-again/challenge
    restart: always
    ports:
      - "1337"
    labels:
      - "traefik.enable=true" # enable Traefik
      - "traefik.http.routers.path-to-success-again.rule=Host(`path-to-success-again.chal.fallctf.com`)" # path-to-success-again.chal.fallctf.com
      - "traefik.http.services.path-to-success-again.loadbalancer.server.port=1337" # connect to port 1337 of this service
      - "traefik.http.routers.path-to-success-again.entrypoints=websecure"
      - "traefik.http.routers.path-to-success-again.tls.certresolver=myresolver"

  airport-security:
    build: ./chals/web/airport-security/app
    restart: always
    ports:
      - "1337"
    labels:
      - "traefik.enable=true" # enable Traefik
      - "traefik.http.routers.airport-security.rule=Host(`airport-security.chal.fallctf.com`)" # airport-security.chal.fallctf.com
      - "traefik.http.services.airport-security.loadbalancer.server.port=1337" # connect to port 1337 of this service
      - "traefik.http.routers.airport-security.entrypoints=websecure"
      - "traefik.http.routers.airport-security.tls.certresolver=myresolver"
